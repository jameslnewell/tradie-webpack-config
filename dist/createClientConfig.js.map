{"version":3,"sources":["../src/createClientConfig.js"],"names":[],"mappings":";;;;;;;;kBAUwB,kB;;AAVxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEe,SAAS,kBAAT,CAA4B,YAA5B,EAA0C;AAAA,MAErD,QAFqD,GAanD,YAbmD,CAErD,QAFqD;AAAA,MAGrD,GAHqD,GAanD,YAbmD,CAGrD,GAHqD;AAAA,MAGhD,IAHgD,GAanD,YAbmD,CAGhD,IAHgD;AAAA,MAG1C,GAH0C,GAanD,YAbmD,CAG1C,GAH0C;AAAA,8BAanD,YAbmD,CAIrD,OAJqD;AAAA,MAK1C,aAL0C,yBAKnD,OALmD;AAAA,MAMnD,OANmD,yBAMnD,OANmD;AAAA,6BAanD,YAbmD,CAQrD,MARqD;AAAA,MAS1C,YAT0C,wBASnD,OATmD;AAAA,MAUvC,eAVuC,wBAUnD,UAVmD;AAAA,MAY5C,kBAZ4C,GAanD,YAbmD,CAYrD,OAZqD;;;AAevD,MAAI,gBAAgB,+BAAgB,YAAhB,CAApB;;;AAGA,MAAM,gBAAgB,gCAAiB,aAAjB,CAAtB;AACA,gBAAc,KAAd,GAAsB,cAAc,MAAd,CAAqB,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC5D,QAAM,MAAM,eAAK,IAAL,CAAU,eAAK,OAAL,CAAa,MAAb,CAAV,EAAgC,wBAAS,MAAT,CAAhC,CAAZ;AACA,wBACK,KADL,sBAEG,GAFH,EAES,MAFT;AAID,GANqB,EAMnB,EANmB,CAAtB;;;AASA,eAAa,OAAb,CAAqB,kBAAU;AAC7B,QAAM,MAAM,eAAK,IAAL,CAAU,eAAK,OAAL,CAAa,MAAb,CAAV,EAAgC,wBAAS,MAAT,CAAhC,CAAZ;AACA,QAAI,cAAc,KAAd,CAAoB,GAApB,CAAJ,EAA8B;AAC5B,oBAAc,KAAd,CAAoB,GAApB,IAA2B,GAAG,MAAH,CAAU,cAAc,KAAd,CAAoB,GAApB,CAAV,EAAoC,MAApC,CAA3B;AACD,KAFD,MAEO;AACL,YAAM,IAAI,KAAJ,oBAA2B,MAA3B,2CAAN;AACD;AACF,GAPD;;;AAUA,MAAI,cAAc,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,kBAAc,OAAd,GAAwB,cAAc,OAAd,CAAsB,MAAtB,CAA6B,CACnD,IAAI,kBAAQ,QAAR,CAAiB,kBAArB,CAAwC;AACtC,YAAM,QADgC;AAEtC,gBAAU,WAAW,uBAAX,GAAqC,WAFT;AAGtC,cAAQ,aAH8B,E;AAItC,iBAAW,cAAc,M;AAJa,KAAxC,CADmD,CAA7B,CAAxB;AAQD,G;;;AAGD,MAAI,QAAQ,MAAR,GAAiB,CAArB,EAAwB;;AAEtB,kBAAc,OAAd,GAAwB,cAAc,OAAd,CAAsB,MAAtB,CAA6B,CACnD,IAAI,kBAAQ,kBAAZ,CAA+B;AAC7B,eAAS,IADoB;AAE7B,gBAAU,QAAQ,eAAK,IAAL,CAAU,GAAV,EAAe,sBAAf,CAAR,C;AAFmB,KAA/B,CADmD,CAA7B,CAAxB;AAMD;;;AAGD,iCAAgB;AACd,sBADc,EACJ,QADI,EACC,YAAY;AADb,GAAhB,EAEG,aAFH;;;AAKA,iCAAgB,EAAC,kBAAD,EAAhB,EAA4B,aAA5B;;;AAGA,+BACK,aADL;;AAGE,YAAQ,KAHV;AAIE,aAAS,WAAW,mBAAX,GAAiC,8BAJ5C;;AAME,aAAS,GANX;;AAQE,YAAQ;AACN,YAAM,IADA;AAEN,gBAAU,WAAW,uBAAX,GAAqC;AAFzC;;AARV;;;AAgBA,kBAAgB,qBAAM,aAAN,EAAqB,kBAArB,CAAhB;;AAEA,SAAO,aAAP;AACD","file":"createClientConfig.js","sourcesContent":["import path from 'path';\nimport fileName from 'file-name';\nimport webpack from 'webpack';\n\nimport merge from './util/merge';\nimport configureStyles from './util/configureStyles';\nimport configureAssets from './util/configureAssets';\nimport createAppConfig from './util/createAppConfig';\nimport getClientBundles from './util/getClientBundles';\n\nexport default function createClientConfig(tradieConfig) {\n  const {\n    optimize,\n    src, dest, tmp,\n    scripts: {\n      bundles: scriptBundles,\n      vendors\n    },\n    styles: {\n      bundles: styleBundles,\n      extensions: styleExtensions\n    },\n    webpack: extraWebpackConfig\n  } = tradieConfig;\n\n  let webpackConfig = createAppConfig(tradieConfig);\n\n  //configure all the bundles\n  const clientBundles = getClientBundles(scriptBundles);\n  webpackConfig.entry = clientBundles.reduce((accum, bundle) => {\n    const key = path.join(path.dirname(bundle), fileName(bundle));\n    return {\n      ...accum,\n      [key]: bundle\n    };\n  }, {});\n\n  //configure the style bundles\n  styleBundles.forEach(bundle => {\n    const key = path.join(path.dirname(bundle), fileName(bundle));\n    if (webpackConfig.entry[key]) {\n      webpackConfig.entry[key] = [].concat(webpackConfig.entry[key], bundle);\n    } else {\n      throw new Error(`Style bundle \"${bundle}\" must have a matching script bundle.`);\n    }\n  });\n\n  //create a common.js bundle for modules that are shared across multiple bundles\n  if (clientBundles.length > 1) {\n    webpackConfig.plugins = webpackConfig.plugins.concat([\n      new webpack.optimize.CommonsChunkPlugin({\n        name: 'common',\n        filename: optimize ? '[name].[chunkhash].js' : '[name].js',\n        chunks: clientBundles, //exclude modules from the vendor chunk\n        minChunks: clientBundles.length //modules must be used across all the chunks to be included\n      })\n    ]);\n  }//TODO: what about for a single page app where require.ensure is used - I want a common stuff for all chunks in the main entry point\n\n  //use vendor modules from the vendor bundle\n  if (vendors.length > 0) {\n    //chose DLLPlugin for long-term-caching based on https://github.com/webpack/webpack/issues/1315\n    webpackConfig.plugins = webpackConfig.plugins.concat([\n      new webpack.DllReferencePlugin({\n        context: dest,\n        manifest: require(path.join(tmp, 'vendor-manifest.json')) //eslint-disable-line global-require\n      })\n    ]);\n  }\n\n  //stylesheets\n  configureStyles({\n    optimize, src, extensions: styleExtensions\n  }, webpackConfig);\n\n  //assets\n  configureAssets({optimize}, webpackConfig);\n\n  //merge common and client config\n  webpackConfig = {\n    ...webpackConfig,\n\n    target: 'web',\n    devtool: optimize ? 'hidden-source-map' : 'cheap-module-eval-source-map',\n\n    context: src,\n\n    output: {\n      path: dest,\n      filename: optimize ? '[name].[chunkhash].js' : '[name].js'\n    }\n\n  };\n\n  //merge extra webpack config\n  webpackConfig = merge(webpackConfig, extraWebpackConfig);\n\n  return webpackConfig;\n}\n"]}