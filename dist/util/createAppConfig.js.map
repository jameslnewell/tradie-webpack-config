{"version":3,"sources":["../../src/util/createAppConfig.js"],"names":[],"mappings":";;;;;;;;kBAmBwB,uB;;AAnBxB;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEM,mB;AAEJ,+BAAY,QAAZ,EAAsB;AAAA;;AACpB,SAAK,QAAL,GAAgB,QAAhB;AACD;;;;0BAEK,Q,EAAU;AAAA;;AACd,eAAS,MAAT,CAAgB,eAAhB,EAAiC,UAAC,UAAD,EAAa,cAAb,EAA6B,cAA7B,EAAgD;AAC/E,cAAK,QAAL,CAAc,4BAAgB,UAAhB,CAAd,EAA2C,4BAAgB,cAAhB,CAA3C,EAA4E,4BAAgB,cAAhB,CAA5E;AACD,OAFD;AAGD;;;;;;AAIY,SAAS,uBAAT,CAAiC,OAAjC,EAA0C;AAAA,MAChD,KADgD,GACf,OADe,CAChD,KADgD;AAAA,MACzC,QADyC,GACf,OADe,CACzC,QADyC;AAAA,MAC/B,YAD+B,GACf,OADe,CAC/B,YAD+B;;;AAGvD,MAAM,SAAS,kCAAyB,OAAzB,CAAf;;;AAGA,MAAI,QAAJ,EAAc;;AAEZ,WAAO,OAAP,GAAiB,OAAO,OAAP,CAAe,MAAf,CAAsB;;;AAGrC,QAAI,kBAAQ,YAAZ,CAAyB;AACvB,8BAAwB,KAAK,SAAL,CAAe,YAAf;AADD,KAAzB,CAHqC,EAOrC,IAAI,kBAAQ,QAAR,CAAiB,oBAArB,EAPqC,EAQrC,IAAI,kBAAQ,QAAR,CAAiB,YAArB,EARqC,EASrC,IAAI,kBAAQ,QAAR,CAAiB,cAArB,CAAoC;AAClC,cAAQ,EAAC,UAAU,KAAX,EAD0B;AAElC,gBAAU,EAAC,UAAU,KAAX;AAFwB,KAApC,CATqC,CAAtB,CAAjB;AAgBD;;;AAGD,MAAI,KAAJ,EAAW;AACT,WAAO,OAAP,GAAiB,OAAO,OAAP,CAAe,MAAf,CAAsB,CACrC,6CADqC,EAErC,IAAI,mBAAJ,CAAwB,YAAxB,CAFqC,CAAtB,CAAjB;AAID;;AAED,SAAO,MAAP;AACD","file":"createAppConfig.js","sourcesContent":["import getObjectValues from 'object-values';\nimport webpack from 'webpack';\nimport BundleUpdatePlugin from 'webpack-bundle-update-hook-plugin';\nimport createCommonBundleConfig from './createCommonConfig';\n\nclass BundleUpdatedPlugin {\n\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  apply(compiler) {\n    compiler.plugin('bundle-update', (newModules, changedModules, removedModules) => {\n      this.callback(getObjectValues(newModules), getObjectValues(changedModules), getObjectValues(removedModules));\n    });\n  }\n\n}\n\nexport default function createApplicationConfig(options) {\n  const {watch, optimize, onFileChange} = options;\n\n  const config = createCommonBundleConfig(options);\n\n  //plugins\n  if (optimize) {\n\n    config.plugins = config.plugins.concat([\n\n      //set env so non-prod code can be removed by uglify-js\n      new webpack.DefinePlugin({\n        'process.env.NODE_ENV': JSON.stringify('production')\n      }),\n\n      new webpack.optimize.OccurenceOrderPlugin(),\n      new webpack.optimize.DedupePlugin(),\n      new webpack.optimize.UglifyJsPlugin({\n        output: {comments: false},\n        compress: {warnings: false}\n      })\n\n    ]);\n\n  }\n\n  //emit bundle update events\n  if (watch) {\n    config.plugins = config.plugins.concat([\n      new BundleUpdatePlugin(),\n      new BundleUpdatedPlugin(onFileChange)\n    ]);\n  }\n\n  return config;\n}\n"]}